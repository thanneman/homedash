{"version":3,"sources":["components/Links.js","components/Headlines.js","components/CalEvents.js","App.js","index.js"],"names":["Links","className","href","target","rel","icon","faEnvelope","size","faYoutube","faInstagram","faTwitter","faReddit","Headlines","props","url","title","slice","source","name","CalEvents","htmlLink","summary","moment","start","dateTime","format","end","gapi","window","API_KEY","process","CALENDAR_ID","App","state","search","location","latitude","longitude","weatherdata","description","temp","headlines","events","error","this","setState","e","preventDefault","usersearch","open","that","load","client","init","apiKey","then","request","path","startOf","toISOString","endOf","response","result","items","reason","console","log","getEvents","navigator","geolocation","getCurrentPosition","position","lat","coords","lng","setTimeout","Promise","all","fetch","res","map","json","data","weather","allHeadlines","articles","catch","err","iconImg","imgUrl","headline","i","key","calEvents","calEvent","onSubmit","handleSubmit","type","results","id","placeholder","onChange","updateSearch","value","length","src","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0a71da3.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport {\n  faYoutube,\n  faInstagram,\n  faTwitter,\n  faReddit,\n} from '@fortawesome/free-brands-svg-icons';\n\nexport default function Links() {\n  return (\n    <>\n      <section className='links'>\n        <a\n          href='https://mail.google.com/mail/u/0/'\n          target='_blank'\n          rel='noopener noreferrer'>\n          <FontAwesomeIcon icon={faEnvelope} size='2x' />\n        </a>\n        <a\n          href='https://www.youtube.com/'\n          target='_blank'\n          rel='noopener noreferrer'>\n          <FontAwesomeIcon icon={faYoutube} size='2x' />\n        </a>\n        <a\n          href='https://www.instagram.com/'\n          target='_blank'\n          rel='noopener noreferrer'>\n          <FontAwesomeIcon icon={faInstagram} size='2x' />\n        </a>\n        <a\n          href='https://twitter.com/'\n          target='_blank'\n          rel='noopener noreferrer'>\n          <FontAwesomeIcon icon={faTwitter} size='2x' />\n        </a>\n        <a\n          href='https://www.reddit.com/'\n          target='_blank'\n          rel='noopener noreferrer'>\n          <FontAwesomeIcon icon={faReddit} size='2x' />\n        </a>\n      </section>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function Headlines(props) {\n  return (\n    <>\n      <p>\n        <a href={props.url} target='_blank' rel='noopener noreferrer'>\n          {props.title.slice(0, 40)}... ({props.source.name})\n        </a>\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nexport default function CalEvents(props) {\n  return (\n    <>\n      <li>\n        <span className='cal-header'>\n          <a href={props.htmlLink} target='_blank' rel='noopener noreferrer'>\n            {props.summary}\n          </a>\n        </span>\n        <p>\n          {moment(props.start.dateTime).format('h:mm A')}\n          {' - '}\n          {moment(props.end.dateTime).format('h:mm A')}\n        </p>\n      </li>\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Links from './components/Links';\nimport Headlines from './components/Headlines';\nimport CalEvents from './components/CalEvents';\nimport moment from 'moment';\n\nvar gapi = window.gapi;\nvar API_KEY = `${process.env.REACT_APP_GOOGLECAL_KEY}`;\nvar CALENDAR_ID = `${process.env.REACT_APP_GOOGLECALID_KEY}`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      location: {\n        latitude: '',\n        longitude: '',\n      },\n      weatherdata: {\n        description: '',\n        icon: '',\n        temp: '',\n      },\n      headlines: [],\n      events: [],\n      error: null,\n    };\n  }\n\n  // update search state\n  updateSearch(search) {\n    this.setState({ search });\n  }\n\n  // handle search and open in new tab\n  handleSubmit(e) {\n    e.preventDefault();\n    const usersearch = `https://www.google.com/search?q=${this.state.search}`;\n    window.open(usersearch, '_blank');\n  }\n\n  getEvents() {\n    let that = this;\n    function start() {\n      gapi.client\n        .init({\n          apiKey: `${API_KEY}`,\n        })\n        .then(function() {\n          return gapi.client.request({\n            path: `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?maxResults=10&orderBy=startTime&showDeleted=false&singleEvents=true&timeMin=${moment()\n              .startOf('day')\n              .toISOString()}&timeMax=${moment()\n              .endOf('day')\n              .toISOString()}`,\n          });\n        })\n        .then(\n          (response) => {\n            let events = response.result.items;\n            that.setState({\n              events: events,\n            });\n          },\n          function(reason) {\n            console.log(reason);\n          }\n        );\n    }\n    gapi.load('client', start);\n  }\n\n  componentDidMount() {\n    this.getEvents();\n\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      this.setState({\n        location: {\n          latitude: lat,\n          longitude: lng,\n        },\n      });\n      setTimeout(() => {\n        Promise.all([\n          fetch(\n            `https://api.weatherbit.io/v2.0/current?lat=${this.state.location.latitude}&lon=${this.state.location.longitude}&units=I&key=${process.env.REACT_APP_WEATHER_KEY}`\n          ),\n          fetch(\n            `https://newsapi.org/v2/top-headlines?q=tech&apiKey=${process.env.REACT_APP_NEWS_KEY}`\n          ),\n        ])\n          .then((res) => {\n            // Get a JSON object from each of the responses\n            return Promise.all(\n              res.map(function(response) {\n                return response.json();\n              })\n            );\n          })\n          .then((result) => {\n            const { temp } = result[0].data[0];\n            const { description, icon } = result[0].data[0].weather;\n            const allHeadlines = result[1].articles.slice(0, 6);\n            this.setState({\n              weatherdata: {\n                temp: temp,\n                description: description,\n                icon: icon,\n              },\n              headlines: allHeadlines,\n            });\n          })\n          .catch((err) => {\n            this.setState({\n              error: 'Something went wrong.',\n            });\n          });\n      }, 500);\n    });\n  }\n\n  render() {\n    // set url for weather icon\n    const iconImg = this.state.weatherdata.icon;\n    const imgUrl = `https://www.weatherbit.io/static/img/icons/${iconImg}.png`;\n\n    // map over all headlines\n    const headlines = this.state.headlines.map((headline, i) => {\n      return <Headlines {...headline} key={i} />;\n    });\n    // map over all headlines\n    const calEvents = this.state.events.map((calEvent, i) => {\n      if (calEvent) {\n        return <CalEvents {...calEvent} key={i} />;\n      } else {\n        return <p>No Calendar Events Today</p>;\n      }\n    });\n    return (\n      <main className='app'>\n        <section className='search'>\n          <form className='search-form' onSubmit={(e) => this.handleSubmit(e)}>\n            <input\n              type='search'\n              results='3'\n              id='search'\n              name='search'\n              placeholder='Search Google'\n              onChange={(e) => this.updateSearch(e.target.value)}\n            />\n          </form>\n        </section>\n        <Links />\n        <section className='weather'>\n          {this.state.weatherdata.icon.length > 0 ? (\n            <img src={imgUrl} alt={this.state.weatherdata.description} />\n          ) : (\n            ''\n          )}\n          {!this.state.weatherdata.temp.length > 0 ? (\n            <h1>{this.state.weatherdata.temp}</h1>\n          ) : (\n            ''\n          )}\n          <p>{this.state.weatherdata.description}</p>\n        </section>\n        <section className='calendar'>\n          <h2>{moment().format('ddd, MMMM Do')}</h2>\n          <ul>{calEvents}</ul>\n        </section>\n        <section className='headlines'>\n          <h2>Top News in Tech</h2>\n          {headlines}\n        </section>\n      </main>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}